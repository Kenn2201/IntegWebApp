<%- include('partials/header'); -%>
<div class="container">
  <h2>List of Active Users</h2>
  <table class="table table-striped">
    <thead>
      <tr>
        <th>Email</th>
        <th>Password</th>
        <th>Role</th>
        <th>Status</th>
        <th>Soft Delete</th>
        <th>Delete User</th>
      </tr>
    </thead>
    <tbody>
      <% users.filter(user => user.status === 'active' && user.isUserDeleted !== 'true').forEach(user => { %>
        <tr>
          <td><%= user.email %></td>
          <td><%= user.password %></td>
          <td><%= user.role %></td>
          <td><button class="btn btn-primary" onclick="changeStatus('<%= user._id %>', 'disabled')">Disable</button></td>

          <td>
            <% if (user.isUserDeleted) { %>
              <button class="btn btn-primary" onclick="toggleDeleted('<%= user._id %>')">Soft Delete</button>
            <% } %>
          </td>
          <td>
            <button class="btn btn-primary" onclick="deleteUser('<%= user._id %>')">Delete User</button>
            
          </td>
        </tr>
      <% }) %>      
    </tbody>
  </table>
  <h2>List of Disabled Users</h2>
  <table class="table table-striped">
    <thead>
      <tr>
        <th>Email</th>
        <th>Password</th>
        <th>Role</th>
        <th>Status</th>
        <th>Soft Delete</th>
        <th>Delete User</th>
      </tr>
    </thead>
    <tbody>
      <% users.filter(user => user.status === 'disabled' && user.isUserDeleted !== 'true').forEach(user => { %>
        <tr>
          <td><%= user.email %></td>
          <td><%= user.password %></td>
          <td><%= user.role %></td>
          <td><button class="btn btn-primary" onclick="changeStatus('<%= user._id %>', 'active')">Enable</button></td>

          <td>
            <% if (user.isUserDeleted) { %>
              <button class="btn btn-primary" onclick="toggleDeleted('<%= user._id %>')">Soft Delete</button>
            <% } %>
          </td>
          <td>
            <button class="btn btn-primary" onclick="deleteUser('<%= user._id %>')">Delete User</button>
            
          </td>
        </tr>
      <% }) %>
    </tbody>
  </table>
</div>
<%- include('partials/footer'); -%>

<script>
  function toggleDeleted(userId) {
    fetch('/editusers', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ userId: userId })
    })
    .then(response => {
      if (response.ok) {
        console.log('User soft deleted successfully');
        location.reload(); // Refresh the page after successful soft delete
      } else {
        console.error('Error soft deleting user:', response.status);
        // Handle the error accordingly
      }
    })
    .catch(error => {
      console.error('An error occurred while soft deleting the user:', error);
      // Handle the error accordingly
    });
  }

  function deleteUser(userId) {
    fetch(`/deleteuser/${userId}`, {
      method: 'DELETE'
    })
    .then(response => {
      if (response.ok) {
        console.log('User deleted successfully');
        location.reload(); // Refresh the page after successful delete
      } else {
        console.error('Error deleting user:', response.status);
        // Handle the error accordingly
      }
    })
    .catch(error => {
      console.error('An error occurred while deleting the user:', error);
      // Handle the error accordingly
    });
  }

  function changeStatus(userId, newStatus) {
    fetch('/edituserstatus', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ userId: userId, status: newStatus })
    })
    .then(response => {
      if (response.ok) {
        console.log('User status updated successfully');
        location.reload(); // Refresh the page after successful status change
      } else {
        console.error('Error updating user status:', response.status);
        // Handle the error accordingly
      }
    })
    .catch(error => {
      console.error('An error occurred while updating user status:', error);
      // Handle the error accordingly
    });
  }
</script>




  


<style>
  .container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    margin-top: 50px;
  }

  h2 {
    font-size: 2rem;
    font-weight: bold;
    margin-bottom: 20px;
  }

  table {
    width: 80%;
    border-collapse: collapse;
  }

  th,
  td {
    text-align: center;
    padding: 10px;
    border: 1px solid black;
  }

  th {
    background-color: #f2f2f2;
  }

  tr:nth-child(even) {
    background-color: #f2f2f2;
  }

  .btn {
    color: white;
    text-decoration: none;
  }

  .btn-primary {
    background-color: #007bff;
    border-color: #007bff;
    padding: 6px 12px;
    font-size: 14px;
    border-radius: 4px;
    cursor: pointer;
  }

  .btn-primary:hover {
    background-color: #0069d9;
    border-color: #0062cc;
  }

  .btn-primary:focus,
  .btn-primary.focus {
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);
  }

  .btn-primary:active,
  .btn-primary.active {
    background-color: #0062cc;
    border-color: #005cbf;
  }
  .disabled-row {
  background-color: #f2f2f2;
  color: #a9a9a9;
}



</style>